(load-file "term.egi")

(define $equation
  (matcher
    {[<equation $ $> [term term]  ; undirected equation
      {[<Equation $l $r> {[l r] [r l]}]
       [_ {}]}]
     [<dequation $ $> [term term] ; directed equation
      {[<Equation $l $r> {[l r]}]
       [_ {}]}]
     [$ something
      {[$tgt {tgt}]}]
     }))

(define $eql (lambda [$x $y] <Equation x y>))

(define $efv
  (lambda [$eq]
    (match eq equation
      {[<equation $l $r> (union (fv l) (fv r))]})))

(define $esubst
  (match-lambda [something equation]
    {[[$sigma <equation $l $r>] <Equation (tsubst sigma l) (tsubst sigma r)>]}))

;;==============================================================================

(define $show-equation
  (match-lambda equation
    {[<equation $x $y> (S.concat {(show-term x) " = " (show-term y)})]}))

(define $show-equations
  (col-show/fn show-equation $1))
