--
-- Implementation of term rewriting system in Egison
--

loadFile "equation.egi"

-- [equation] -> term -> term
rewrite axioms tm :=
  match (tm, axioms) as (term, multiset equation) with
    | ( subtermNonvar $subtm $context
      , dequation (termMatch #subtm $sigma) $r :: _ ) ->
      rewrite axioms (context (tsubst sigma r))
    | _ -> tm

joinable? axioms s t :=
  rewrite axioms s = rewrite axioms t

-- [equation] -> [term] -> [term]
rewriteAll axioms tms :=
  matchAll (tms, axioms) as (multiset term, multiset equation) with
    | ( subtermNonvar $subtm $context :: _
      , equation (termMatch #subtm $sigma) $r :: _ ) -> context (tsubst sigma r)

rewriteLoop :=
  \match as (term, multiset term, multiset equations) with
    | ($goal, #goal :: _, _) -> PROVEN
    | ($goal, $tgt, $axioms) ->
      rewriteLoop goal (debug/fn showTerms (rewriteAll axioms tgt)) axioms

solve :=
  \match as (multiset equation, equation) with
    | ($axioms, dequation $l $r) -> rewriteLoop r [l] axioms
